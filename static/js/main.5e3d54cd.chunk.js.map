{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/serach-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMnsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAMaA,EAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAU,iBAAf,UAEI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCNbC,EAAW,SAACR,GAErB,OAAQ,qBAAKC,UAAU,YAAf,SACHD,EAAMS,SAASC,KACd,SAAAN,GAAO,OACP,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCPhBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAErB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiDHG,E,kDAlDb,aACC,IAAD,8BACE,gBAiBFH,aAAe,SAACI,GAEd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjBtC,EAAKC,MAAM,CACTb,SAAS,GACTU,YAAa,IALjB,E,qDAUA,WACC,IAAD,OACEI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,oBAQvC,WAAU,IAAD,EAEsBC,KAAKN,MAA5Bb,EAFC,EAEDA,SAASU,EAFR,EAEQA,YACTU,EAAkBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC7CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYc,wBAKlD,OACE,sBAAKhC,UAAU,MAAf,UACI,kDAEF,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAzCVK,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5e3d54cd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\n\r\n\r\nexport const Card = props=>\r\n(\r\n    <div className='card-container'>\r\n\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=200x200`}/>\r\n\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './card-list.style.css' ;\r\n \r\nimport { Card } from '../card/card.component';\r\n\r\n\r\nexport const CardList = (props)=> {\r\n      \r\n    return (<div className='card-list'>\r\n        {props.monsters.map(\r\n          monster=>\r\n          <Card key={monster.id} monster={monster}/>\r\n        )}\r\n        </div>)\r\n}","import React from \"react\";\r\n\r\nimport './search-box.style.css';\r\n\r\n\r\nexport const SearchBox = ({placeholder,handleChange})=> (\r\n\r\n    <input \r\n        className='search'\r\n        type='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange} \r\n    />\r\n\r\n) ","//import logo from './logo.svg';\nimport './App.css';\nimport React,{Component} from 'react';\n\n\nimport {CardList} from './components/card-list/card-list.component'\n\n\nimport {SearchBox} from './components/serach-box/search-box.component'\nclass App extends Component{\n  constructor()\n  {\n    super();\n\n    this.state={\n      monsters:[],\n      searchField: ''\n    };\n\n    \n  }\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n\n\n  handleChange = (e)=>                        //used as a bind function to set proper this state\n  {\n    this.setState({ searchField: e.target.value});\n  }\n  render() {\n\n    const{monsters,searchField}= this.state;\n    const filteredMnsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n\n\n    \n    \n    return(\n      <div className=\"App\">\n          <h1 >Monsters Rolodex</h1>\n            \n        <SearchBox \n          placeholder='search monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMnsters} />\n          \n        \n      \n    </div>\n  );\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}